{
  // Place your react-bootstrap workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Atoms": {
    "scope": "typescriptreact",
    "prefix": ["atoms"],
    "body": [
      "import React from 'react';",
      "import { ${TM_FILENAME_BASE}Props_, ${TM_FILENAME_BASE/(.*)/${1:/upcase}/} } from '../../variables';",
      "import { globalProps, globalStyle } from '../global';",
      "",
      "export default function ${TM_FILENAME_BASE}(props:${TM_FILENAME_BASE}Props_) {",
      "  const { children } = props;",
      "",
      "  const localClassName = [];",
      "  localClassName.push(${TM_FILENAME_BASE/(.*)/${1:/upcase}/}.base);",
      "  const className = localClassName.concat(globalStyle(props));",
      "",
      "  return React.createElement('div', {",
      "    className: className.join(' '),",
      "    ...globalProps(props),",
      "  }, children);",
      "}",
      "",
      "${TM_FILENAME_BASE}.defaultProps = {",
      "  children: null,",
      "};",
      ""
    ],
    "description": "create atoms"
  }
}
